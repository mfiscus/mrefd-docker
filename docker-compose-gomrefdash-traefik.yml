version: '3.8'

services:
  traefik:
    image: traefik:latest
    container_name: "traefik"
    hostname: traefik_container
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      # logging
      - --accesslog=true
      #- --log.level=DEBUG
      - --accesslog.filepath=/var/log/traefik.log
      - --accesslog.bufferingsize=100
      # create entrypoints
      - --entrypoints.www.address=:80/tcp
      - --entrypoints.traefik.address=:8080/tcp
      # gomrefdash
      - --entrypoints.mrefd-http.address=:80/tcp
      # mrefd
      - --entrypoints.mrefd-m17.address=:17000/udp
      - --entrypoints.mrefd-m17.udp.timeout=86400s
    ports:
      # traefik ports
      - 80:80/tcp # The www port
      - 8080:8080/tcp # The Web UI (enabled by --api.insecure=true)
      # mrefd ports
      - 80:80/tcp # http
      - 17000:17000/udp # m17
    networks:
      - proxy
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped

  gomrefdash:
    image: mfiscus/gomrefdash:latest
    container_name: gomrefdash
    hostname: gomrefdash_container
    depends_on:
      traefik:
        condition: service_started
      gomrefdash:
        condition: service_healthy
        restart: true
    labels:
      - "traefik.gomrefdash-http.rule=HostRegexp:your_domain.com,{catchall:.*}"
      - "traefik.gomrefdash-http.priority=1"
      - "traefik.docker.network=docker_proxy"
      # Explicitly tell Traefik to expose this container
      - "traefik.enable=true"
      # The domain the service will respond to
      - "traefik.http.routers.gomrefdash-http.rule=Host(`your_domain.com`)"
      # Allow request only from the predefined entry point named "gomrefdash-http"
      - "traefik.http.routers.gomrefdash-http.entrypoints=gomrefdash-http"
      # Specify port
      - "traefik.http.services.gomrefdash-http.loadbalancer.server.port=80"
      # test alternate http port
      - "traefik.http.routers.gomrefdash-http.service=gomrefdash-http"
    networks:
      - proxy
    volumes:
      # local directory where state and config files (including callinghome.php) will be saved
      - /opt/mrefd:/config
    privileged: true
    restart: unless-stopped

  mrefd:
    image: mfiscus/mrefd:latest
    container_name: mrefd
    hostname: mrefd_container
    depends_on:
      traefik:
        condition: service_started
    labels:
      - "traefik.docker.network=docker_proxy"
      # Explicitly tell Traefik to expose this container
      - "traefik.enable=true"
      # UDP routers
      # m17
      - "traefik.udp.routers.mrefd-m17.entrypoints=mrefd-m17"
      - "traefik.udp.routers.mrefd-m17.service=mrefd-m17"
      - "traefik.udp.services.mrefd-m17.loadbalancer.server.port=17000"
    environment:
      CALLSIGN: 'M17-???'
      EMAIL: 'your@email.com'
      DASHBOARDURL: 'your_domain.com'
      PORT: '17000'
      COUNTRY: 'US'
      SPONSER: 'My ham club'
      # Define how many modules you require
      MODULES: 'ABCD'
      TZ: 'UTC'
    networks:
      - proxy
    volumes:
      # local directory where state and config files (including callinghome.php) will be saved
      - /opt/mrefd:/config
    restart: unless-stopped